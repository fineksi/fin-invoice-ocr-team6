name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Node.js App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json
          
      - name: Install Dependencies
        working-directory: backend
        run: npm install

      - name: Build Application
        working-directory: backend
        run: npm run build
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: backend/dist/

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install Dependencies
        working-directory: backend
        run: npm install

      - name: Run Linter
        working-directory: backend
        run: npm run lint

      - name: Run Tests
        working-directory: backend
        run: npm test
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get install openssh-client

      - name: Create SSH Key
        run: echo "${{ secrets.SSH_KEY }}" > ssh-key.pem

      - name: Update SSH Key Permission
        run: chmod 400 ssh-key.pem

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh-key.pem ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }} "
            cd ~/fin-invoice-ocr-team6/backend &&
            git reset --hard HEAD &&
            git pull origin main &&
            npm install --production &&
            pm2 restart invoice-ocr-backend || pm2 start server.js --name invoice-ocr-backend &&
            pm2 save
          "
